{"ast":null,"code":"var _jsxFileName = \"/home/binduk/REACT/blinkist/src/utils/CurrentBooks.tsx\";\nimport { Grid, Container } from '@mui/material';\nimport MyCard from '../molecules/MyCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst currentBooksData = `{\"books\":[{\"id\":1,\"src\":\"1.png\",\"name\":\"Bring Your Human to Work\",\n     \"author\":\"Erica Keswin\",\"duration\":\"13\"},\n  {\"id\":2,\"src\":\"2.png\",\"name\":\"Employee to Entrepreneur\",\"author\":\"Steve Glaveski\",\"duration\":\"15\"},\n  {\"id\":3,\"src\":\"3.png\",\"name\":\"Doesn’t Hurt to Ask\",\"author\":\"Trey Gowdy\",\"duration\":\"13\",\"noOfReads\":\"1.9\"},\n  {\"id\":4,\"src\":\"4.png\",\"name\":\"The Fate of Food\",\"author\":\"Amanda Little\",\"duration\":\"12\",\"noOfReads\":\"16\"},\n  {\"id\":5,\"src\":\"5.png\",\"name\":\"Lives of the Stoics\",\"author\":\"Ryan Holiday, Stephen Hansel\",\"duration\":\"13\"},\n  {\n     \"id\":6,\n     \"src\":\"6.png\",\n     \"name\":\"Loving Your Business\",\n     \"author\":\"Debbie King\",\n     \"duration\":\"13\"\n  },\n  {\n     \"id\":7,\n     \"src\":\"7.png\",\n     \"name\":\"The Lonely Century\",\n     \"author\":\"Noreena Hertz\",\n     \"duration\":\"15\"\n  },\n  {\n     \"id\":8,\n     \"src\":\"8.png\",\n     \"name\":\"Eat Better, Feel Better\",\n     \"author\":\"Giada De Laurentiis\",\n     \"duration\":\"13\",\n     \"noOfReads\":\"1.9\"\n  },\n  {\n     \"id\":9,\n     \"src\":\"9.png\",\n     \"name\":\"Dropshipping\",\n     \"author\":\"James Moore\",\n     \"duration\":\"12\"\n  }\n]}`;\nconst data = JSON.parse(currentBooksData);\nconst currentBooks = data.books;\nconsole.log(\"currently reading books:\");\nconsole.log(currentBooks);\n\nfunction CurrentBooks(props) {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      paddingLeft: \"7%\",\n      paddingRight: \"7%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      rowSpacing: 2,\n      children: currentBooks.filter(val => {\n        if (props.searchTerm === \"\") return val;else if (val.name.toLowerCase().includes(props.searchTerm.toLowerCase()) || val.author.toLowerCase().includes(searchTerm.toLowerCase())) {\n          return val;\n        }\n      }).map(book => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: [\" \", /*#__PURE__*/_jsxDEV(MyCard, {\n          id: book.id,\n          button: \"add\",\n          progressBar: \"none\",\n          src: book.src,\n          name: book.name,\n          author: book.author,\n          duration: book.duration,\n          noOfReads: book.noOfReads\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 67\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 33\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_c = CurrentBooks;\nexport default CurrentBooks;\n/* {OPENBOOK.map(book=> (<Grid item xs={12} sm={6} md={4}>\n  <MyCard changeTab={props.changeTab} progressBar='half' button='Finished' id={book.id} key={book.id} src={book.src} name={book.name} author={book.author} duration={book.duration}\n  noOfReads={book.noOfReads}\n  />\n</Grid>\n))}  */\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentBooks\");","map":{"version":3,"sources":["/home/binduk/REACT/blinkist/src/utils/CurrentBooks.tsx"],"names":["Grid","Container","MyCard","currentBooksData","data","JSON","parse","currentBooks","books","console","log","CurrentBooks","props","paddingLeft","paddingRight","filter","val","searchTerm","name","toLowerCase","includes","author","map","book","id","src","duration","noOfReads"],"mappings":";AAAA,SAASA,IAAT,EAAeC,SAAf,QAA+B,eAA/B;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;;AAeA,MAAMC,gBAAgB,GAAE;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAnCA;AAoCA,MAAMC,IAAI,GAAEC,IAAI,CAACC,KAAL,CAAWH,gBAAX,CAAZ;AACA,MAAMI,YAAY,GAAEH,IAAI,CAACI,KAAzB;AACAC,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAD,OAAO,CAACC,GAAR,CAAYH,YAAZ;;AAEA,SAASI,YAAT,CAAsBC,KAAtB,EAAkC;AAC9B,sBACA,QAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAACC,MAAAA,WAAW,EAAC,IAAb;AAAkBC,MAAAA,YAAY,EAAC;AAA/B,KAAlB;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,UAAU,EAAE,CAA5B;AAAA,gBACEP,YAAY,CAACQ,MAAb,CAAqBC,GAAD,IAAW;AACjC,YAAGJ,KAAK,CAACK,UAAN,KAAqB,EAAxB,EACE,OAAOD,GAAP,CADF,KAEK,IAAIA,GAAG,CAACE,IAAJ,CAASC,WAAT,GAAuBC,QAAvB,CAAgCR,KAAK,CAACK,UAAN,CAAiBE,WAAjB,EAAhC,KAAmEH,GAAG,CAACK,MAAJ,CAAWF,WAAX,GAAyBC,QAAzB,CAAkCH,UAAU,CAACE,WAAX,EAAlC,CAAvE,EAAmI;AACtI,iBAAOH,GAAP;AACD;AAAC,OALA,EAKEM,GALF,CAKOC,IAAD,iBAAkB,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAA0B,QAAA,EAAE,EAAE,CAA9B;AAAA,qCAAkC,QAAC,MAAD;AAAQ,UAAA,EAAE,EAAEA,IAAI,CAACC,EAAjB;AAAqB,UAAA,MAAM,EAAC,KAA5B;AAAkC,UAAA,WAAW,EAAC,MAA9C;AAC3D,UAAA,GAAG,EAAED,IAAI,CAACE,GADiD;AAC5C,UAAA,IAAI,EAAEF,IAAI,CAACL,IADiC;AAE5D,UAAA,MAAM,EAAEK,IAAI,CAACF,MAF+C;AAEvC,UAAA,QAAQ,EAAEE,IAAI,CAACG,QAFwB;AAEd,UAAA,SAAS,EAAEH,IAAI,CAACI;AAFF;AAAA;AAAA;AAAA;AAAA,gBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,cALxB;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADA;AAeH;;KAhBQhB,Y;AAiBT,eAAeA,YAAf;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { Grid ,Container} from '@mui/material'\nimport OPENBOOK from './currentlyReading';\nimport MyCard from '../molecules/MyCard';\ninterface Props{\n  changeTab(val:number): any\n  searchTerm:string\n}\n\ninterface BookType{\n  id:number,\n  src:string,\n  name:string,\n  author:string,\n  duration:string,\n  noOfReads?:string,\n}\n\nconst currentBooksData=`{\"books\":[{\"id\":1,\"src\":\"1.png\",\"name\":\"Bring Your Human to Work\",\n     \"author\":\"Erica Keswin\",\"duration\":\"13\"},\n  {\"id\":2,\"src\":\"2.png\",\"name\":\"Employee to Entrepreneur\",\"author\":\"Steve Glaveski\",\"duration\":\"15\"},\n  {\"id\":3,\"src\":\"3.png\",\"name\":\"Doesn’t Hurt to Ask\",\"author\":\"Trey Gowdy\",\"duration\":\"13\",\"noOfReads\":\"1.9\"},\n  {\"id\":4,\"src\":\"4.png\",\"name\":\"The Fate of Food\",\"author\":\"Amanda Little\",\"duration\":\"12\",\"noOfReads\":\"16\"},\n  {\"id\":5,\"src\":\"5.png\",\"name\":\"Lives of the Stoics\",\"author\":\"Ryan Holiday, Stephen Hansel\",\"duration\":\"13\"},\n  {\n     \"id\":6,\n     \"src\":\"6.png\",\n     \"name\":\"Loving Your Business\",\n     \"author\":\"Debbie King\",\n     \"duration\":\"13\"\n  },\n  {\n     \"id\":7,\n     \"src\":\"7.png\",\n     \"name\":\"The Lonely Century\",\n     \"author\":\"Noreena Hertz\",\n     \"duration\":\"15\"\n  },\n  {\n     \"id\":8,\n     \"src\":\"8.png\",\n     \"name\":\"Eat Better, Feel Better\",\n     \"author\":\"Giada De Laurentiis\",\n     \"duration\":\"13\",\n     \"noOfReads\":\"1.9\"\n  },\n  {\n     \"id\":9,\n     \"src\":\"9.png\",\n     \"name\":\"Dropshipping\",\n     \"author\":\"James Moore\",\n     \"duration\":\"12\"\n  }\n]}`\nconst data= JSON.parse(currentBooksData);\nconst currentBooks= data.books;\nconsole.log(\"currently reading books:\")\nconsole.log(currentBooks) \n\nfunction CurrentBooks(props:Props){\n    return (\n    <Container style={{paddingLeft:\"7%\",paddingRight:\"7%\"}}>\n      <Grid container rowSpacing={2} >\n      { currentBooks.filter((val:any)=>{\n      if(props.searchTerm === \"\")\n        return val \n      else if (val.name.toLowerCase().includes(props.searchTerm.toLowerCase()) || val.author.toLowerCase().includes(searchTerm.toLowerCase())){\n        return val\n      }}).map((book:BookType) =><Grid item xs={12} sm={6} md={4}> <MyCard id={book.id} button='add' progressBar='none'\n       src={book.src} name={book.name}\n      author={book.author} duration={book.duration} noOfReads={book.noOfReads}/>\n       </Grid> )} \n      </Grid>\n      </Container>\n    );\n}\nexport default CurrentBooks;\n\n/* {OPENBOOK.map(book=> (<Grid item xs={12} sm={6} md={4}>\n  <MyCard changeTab={props.changeTab} progressBar='half' button='Finished' id={book.id} key={book.id} src={book.src} name={book.name} author={book.author} duration={book.duration}\n  noOfReads={book.noOfReads}\n  />\n</Grid>\n))}  */"]},"metadata":{},"sourceType":"module"}