{"ast":null,"code":"var _jsxFileName = \"/home/binduk/REACT/blinkist/src/molecules/SearchBar.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { TextField } from '@mui/material';\nimport MyCard from './MyCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = `{\"books\":[{'id':1,'src':\"1.png\",'name':\"Bring Your Human to Work\", 'author':\"Erica Keswin\", 'duration':\"13\"},\n{'id':2,'src':\"2.png\",'name':\"Employee to Entrepreneur\", 'author':\"Steve Glaveski\", 'duration':\"15\"},\n{'id':3,'src':\"3.png\",'name':\"Doesn’t Hurt to Ask\", 'author':\"Trey Gowdy\", 'duration':\"13\",'noOfReads':\"1.9\"}\n]}`;\nconst data2 = JSON.parse(data);\nconst myData = data2.books;\nconsole.log(myData);\n\nconst SearchBar = props => {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const search = e => {\n    //console.log(e.target.value)\n    let filter = e.target.value.toLowerCase();\n\n    for (let i = 0; i < props.books.length; i++) {\n      let textvalue = props.books[i].name.toLowerCase();\n\n      if (textvalue.indexOf(filter) > -1) {\n        /*#__PURE__*/\n        _jsxDEV(MyCard, {\n          progressBar: \"half\",\n          button: \"Finished\",\n          id: props.books[i].id,\n          src: props.books[i].src,\n          name: props.books[i].name,\n          author: props.books[i].author,\n          duration: props.books[i].duration,\n          noOfReads: props.books[i].noOfReads\n        }, props.books[i].id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this);\n      }\n    }\n    /* console.log(`the filtered books are `)\n    filteredBooks.map(book => console.log(book.name)) */\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      style: {\n        width: '750px'\n      },\n      onChange: e => {\n        setSearchTerm(e.target.value);\n      },\n      label: \"Search by title or author\",\n      variant: \"standard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 1\n    }, this), myData.filter(val => {\n      if (searchTerm === '') return /*#__PURE__*/_jsxDEV(MyCard, {\n        progressBar: \"half\",\n        button: \"Finished\",\n        id: val.id,\n        src: val.src,\n        name: val.name,\n        author: val.author,\n        duration: val.duration,\n        noOfReads: val.noOfReads\n      }, val.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 12\n      }, this);else if (val.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n        return val;\n      }\n    }).map((val, key) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", val.name, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 8\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchBar, \"YAxLNde9buDBdNo+a8YOFgSd3e4=\");\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/home/binduk/REACT/blinkist/src/molecules/SearchBar.tsx"],"names":["React","useState","TextField","MyCard","data","data2","JSON","parse","myData","books","console","log","SearchBar","props","searchTerm","setSearchTerm","search","e","filter","target","value","toLowerCase","i","length","textvalue","name","indexOf","id","src","author","duration","noOfReads","width","val","includes","map","key"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\nimport SearchOutlinedIcon from '@mui/icons-material/SearchOutlined';\nimport { InputAdornment, TextField ,Grid, Menu, MenuItem, Typography, Container} from '@mui/material';\nimport MyCard from './MyCard';\n\ninterface Props{\n  books:{id: number,\n    src: string,\n    name: string,\n    author: string,\n    duration: string,\n    noOfReads?: string}[],\n    changePage?:any\n}\n\nconst data=`{\"books\":[{'id':1,'src':\"1.png\",'name':\"Bring Your Human to Work\", 'author':\"Erica Keswin\", 'duration':\"13\"},\n{'id':2,'src':\"2.png\",'name':\"Employee to Entrepreneur\", 'author':\"Steve Glaveski\", 'duration':\"15\"},\n{'id':3,'src':\"3.png\",'name':\"Doesn’t Hurt to Ask\", 'author':\"Trey Gowdy\", 'duration':\"13\",'noOfReads':\"1.9\"}\n]}`\n\nconst data2= JSON.parse(data);\nconst myData= data2.books;\nconsole.log(myData)\nconst SearchBar=(props:Props)=> {\n  const [searchTerm,setSearchTerm]= useState('')\n\n  const search= (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>)=>{\n    //console.log(e.target.value)\n    let filter=e.target.value.toLowerCase();\n    for(let i=0;i<props.books.length; i++){\n        let textvalue= props.books[i].name.toLowerCase();\n        if(textvalue.indexOf(filter)> -1){\n              <MyCard progressBar='half' button='Finished' \n              id={props.books[i].id} key={props.books[i].id} \n              src={props.books[i].src} name={props.books[i].name} author={props.books[i].author} duration={props.books[i].duration}\n              noOfReads={props.books[i].noOfReads}\n              />\n        }\n    }\n    /* console.log(`the filtered books are `)\n    filteredBooks.map(book => console.log(book.name)) */\n  }\n    return (\n        <div>\n<TextField style={{width:'750px'}}  onChange={(e)=>{\n  setSearchTerm(e.target.value)\n}} label=\"Search by title or author\" variant=\"standard\" />\n{myData.filter((val:any)=>{\n  if(searchTerm === '')\n    return <MyCard progressBar='half' button='Finished' id={val.id} key={val.id} src={val.src} name={val.name} author={val.author} duration={val.duration}\n    noOfReads={val.noOfReads}\n    />\n  else if (val.name.toLowerCase().includes(searchTerm.toLowerCase())){\n    return val\n  }\n}).map((val:any,key:any) => {\nreturn <div> {val.name} </div>\n\n})}\n\n\n\n</div> );\n\n}\n\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}