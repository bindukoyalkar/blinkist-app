{"ast":null,"code":"var _jsxFileName = \"/home/binduk/REACT/blinkist/src/molecules/SearchBar.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { TextField, Grid, Container } from '@mui/material';\nimport MyCard from './MyCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBar = props => {\n  _s();\n\n  const [value, setValue] = useState('');\n  const filteredBooks = [];\n\n  const search = e => {\n    //console.log(e.target.value)\n    let filter = e.target.value.toLowerCase();\n\n    for (let i = 0; i < props.books.length; i++) {\n      let textvalue = props.books[i].name.toLowerCase();\n\n      if (textvalue.indexOf(filter) > -1) {\n        filteredBooks.push(props.books[i]);\n      }\n    }\n\n    console.log(`the filtered books are `);\n    filteredBooks.map(book => console.log(book.name));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      style: {\n        width: '750px'\n      },\n      onChange: search,\n      label: \"Search by title or author\",\n      variant: \"standard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        paddingLeft: \"7%\",\n        paddingRight: \"7%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        rowSpacing: 2,\n        children: OPENBOOK.map(book => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(MyCard, {\n            progressBar: \"half\",\n            button: \"Finished\",\n            id: book.id,\n            src: book.src,\n            name: book.name,\n            author: book.author,\n            duration: book.duration,\n            noOfReads: book.noOfReads\n          }, book.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 31\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchBar, \"jByi55hotCy99CsmdWrmrBk0P1M=\");\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/home/binduk/REACT/blinkist/src/molecules/SearchBar.tsx"],"names":["React","useState","TextField","Grid","Container","MyCard","SearchBar","props","value","setValue","filteredBooks","search","e","filter","target","toLowerCase","i","books","length","textvalue","name","indexOf","push","console","log","map","book","width","paddingLeft","paddingRight","OPENBOOK","id","src","author","duration","noOfReads"],"mappings":";;;AAAA,OAAOA,KAAP,IAAwBC,QAAxB,QAAwC,OAAxC;AAEA,SAAyBC,SAAzB,EAAoCC,IAApC,EAAsEC,SAAtE,QAAsF,eAAtF;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAUA,MAAMC,SAAS,GAAEC,KAAD,IAAgB;AAAA;;AAC9B,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMS,aAKiB,GAAC,EALxB;;AAOA,QAAMC,MAAM,GAAGC,CAAD,IAAgE;AAC5E;AACA,QAAIC,MAAM,GAACD,CAAC,CAACE,MAAF,CAASN,KAAT,CAAeO,WAAf,EAAX;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACT,KAAK,CAACU,KAAN,CAAYC,MAA1B,EAAkCF,CAAC,EAAnC,EAAsC;AAClC,UAAIG,SAAS,GAAEZ,KAAK,CAACU,KAAN,CAAYD,CAAZ,EAAeI,IAAf,CAAoBL,WAApB,EAAf;;AACA,UAAGI,SAAS,CAACE,OAAV,CAAkBR,MAAlB,IAA2B,CAAC,CAA/B,EAAiC;AAC/BH,QAAAA,aAAa,CAACY,IAAd,CAAmBf,KAAK,CAACU,KAAN,CAAYD,CAAZ,CAAnB;AACD;AACJ;;AACDO,IAAAA,OAAO,CAACC,GAAR,CAAa,yBAAb;AACAd,IAAAA,aAAa,CAACe,GAAd,CAAkBC,IAAI,IAAIH,OAAO,CAACC,GAAR,CAAYE,IAAI,CAACN,IAAjB,CAA1B;AACD,GAXD;;AAYE,sBACI;AAAA,4BAiCR,QAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAACO,QAAAA,KAAK,EAAC;AAAP,OAAlB;AAAoC,MAAA,QAAQ,EAAEhB,MAA9C;AAAsD,MAAA,KAAK,EAAC,2BAA5D;AAAwF,MAAA,OAAO,EAAC;AAAhG;AAAA;AAAA;AAAA;AAAA,YAjCQ,eAkCR,QAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAACiB,QAAAA,WAAW,EAAC,IAAb;AAAkBC,QAAAA,YAAY,EAAC;AAA/B,OAAlB;AAAA,6BACM,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,UAAU,EAAE,CAA5B;AAAA,kBACGC,QAAQ,CAACL,GAAT,CAAaC,IAAI,iBAAI,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,EAAE,EAAE,CAAvB;AAA0B,UAAA,EAAE,EAAE,CAA9B;AAAA,iCACpB,QAAC,MAAD;AAAQ,YAAA,WAAW,EAAC,MAApB;AAA2B,YAAA,MAAM,EAAC,UAAlC;AAA6C,YAAA,EAAE,EAAEA,IAAI,CAACK,EAAtD;AAAwE,YAAA,GAAG,EAAEL,IAAI,CAACM,GAAlF;AAAuF,YAAA,IAAI,EAAEN,IAAI,CAACN,IAAlG;AAAwG,YAAA,MAAM,EAAEM,IAAI,CAACO,MAArH;AAA6H,YAAA,QAAQ,EAAEP,IAAI,CAACQ,QAA5I;AACA,YAAA,SAAS,EAAER,IAAI,CAACS;AADhB,aAA+DT,IAAI,CAACK,EAApE;AAAA;AAAA;AAAA;AAAA;AADoB;AAAA;AAAA;AAAA;AAAA,gBAArB;AADH;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,YAlCQ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiDH,CAvED;;GAAMzB,S;;KAAAA,S;AAyEN,eAAeA,SAAf","sourcesContent":["import React, { useRef, useState } from 'react';\nimport SearchOutlinedIcon from '@mui/icons-material/SearchOutlined';\nimport { InputAdornment, TextField ,Grid, Menu, MenuItem, Typography, Container} from '@mui/material';\nimport MyCard from './MyCard';\n\ninterface Props{\n  books:{id: number,\n    src: string,\n    name: string,\n    author: string,\n    duration: string,\n    noOfReads?: string}[]\n}\nconst SearchBar=(props:Props)=> {\n  const [value,setValue]= useState('')\n\n  const filteredBooks:{id: number,\n    src: string,\n    name: string,\n    author: string,\n    duration: string,\n    noOfReads?: string}[]=[]\n\n  const search= (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>)=>{\n    //console.log(e.target.value)\n    let filter=e.target.value.toLowerCase();\n    for(let i=0;i<props.books.length; i++){\n        let textvalue= props.books[i].name.toLowerCase();\n        if(textvalue.indexOf(filter)> -1){\n          filteredBooks.push(props.books[i])\n        }\n    }\n    console.log(`the filtered books are `)\n    filteredBooks.map(book => console.log(book.name))\n  }\n    return (\n        <div>\n       {/*  <Grid container direction=\"row\" alignItems=\"center\">\n  <Grid item>\n  <SearchOutlinedIcon/>\n  </Grid>\n  <Grid item>\n  <TextField icon={<SearchOutlinedIcon/>} label=\"Search by title or author\" variant=\"standard\" />\n  </Grid>\n</Grid>  */} \n\n\n{/* <TextField\n  variant=\"standard\"\n  InputProps={{\n    startAdornment: (\n      <InputAdornment position=\"start\">\n        <SearchOutlinedIcon />\n      </InputAdornment>\n    )\n  }}\n  style={{height: '46px',\n    width: '658px',\n    }}\n  label=\"Search by title or author\"\n/> */}\n\n{/* <Typography variant='h6'style={{height: '46px',\n    width: '658px',verticalAlign: 'middle',\n    display: 'inline-flex', borderBottom:'1px solid black'\n    }} ><SearchOutlinedIcon/> Search by title or author</Typography>\n        </div>\n    ); */}\n\n<TextField style={{width:'750px'}}  onChange={search} label=\"Search by title or author\" variant=\"standard\" />\n<Container style={{paddingLeft:\"7%\",paddingRight:\"7%\"}}>\n      <Grid container rowSpacing={2} >\n        {OPENBOOK.map(book=> (<Grid item xs={12} sm={6} md={4}>\n          <MyCard progressBar='half' button='Finished' id={book.id} key={book.id} src={book.src} name={book.name} author={book.author} duration={book.duration}\n          noOfReads={book.noOfReads}\n          />\n        </Grid>\n        ))}        \n      </Grid>\n      </Container>\n\n\n</div> );\n\n}\n\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}