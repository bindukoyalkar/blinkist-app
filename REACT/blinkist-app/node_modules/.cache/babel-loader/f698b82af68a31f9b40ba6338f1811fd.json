{"ast":null,"code":"var _jsxFileName = \"/home/binduk/REACT/typescript-with-mui/src/Cards.tsx\",\n    _s = $RefreshSig$();\n\n//without make styles\nimport React from 'react';\nimport { Typography, Card, CardContent } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\nimport Image from './atoms/Image';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  wrapIcon: {\n    verticalAlign: 'middle',\n    display: 'inline-flex'\n  }\n}));\n\nfunction Cards(props) {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        maxWidth: 284\n      },\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        path: props.imag,\n        width: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            fontFamily: 'Cera Pro',\n            fontSize: '18px',\n            fontStyle: 'normal',\n            fontWeight: '700',\n            lineHeight: '23px',\n            letterSpacing: '0em',\n            textAlign: 'left',\n            height: '23px',\n            width: '225px',\n\n            /*  left: '16px', */\n\n            /*  top: '310px', */\n            position: 'absolute',\n            left: '5.63%',\n            right: '15.14%',\n            bottom: '28.54%',\n            borderRadius: 'nullpx'\n          },\n          variant: \"subtitle1\",\n          children: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            fontFamily: 'Cera Pro',\n            fontSize: '16px',\n            fontStyle: 'normal',\n            fontWeight: '400',\n            lineHeight: '20px',\n            letterSpacing: '0em',\n            textAlign: 'left'\n          },\n          variant: \"body1\",\n          children: props.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          style: {\n            fontFamily: 'Cera Pro',\n            fontSize: '14px',\n            fontStyle: 'normal',\n            fontWeight: '400',\n            lineHeight: '18px',\n            letterSpacing: '0em',\n            textAlign: 'left'\n          },\n          className: classes.wrapIcon,\n          children: [/*#__PURE__*/_jsxDEV(AccessTimeIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 5\n          }, this), props.duration, \"-minute read\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Cards, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Cards;\nexport default Cards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"sources":["/home/binduk/REACT/typescript-with-mui/src/Cards.tsx"],"names":["React","Typography","Card","CardContent","makeStyles","AccessTimeIcon","Image","useStyles","theme","wrapIcon","verticalAlign","display","Cards","props","classes","maxWidth","imag","fontFamily","fontSize","fontStyle","fontWeight","lineHeight","letterSpacing","textAlign","height","width","position","left","right","bottom","borderRadius","name","author","duration"],"mappings":"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","sourcesContent":["//without make styles\nimport React from 'react';\nimport {Typography, Card, CardContent } from '@mui/material'\nimport { makeStyles } from '@mui/styles';\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\nimport Image from './atoms/Image'\nconst useStyles = makeStyles(theme => ({\n    wrapIcon: {\n      verticalAlign: 'middle',\n      display: 'inline-flex'\n     }\n  })); \ninterface Props{\n    imag:string,\n    name:string,\n    author:string,\n    duration:string\n}\nfunction Cards(props :Props) {\n    const classes=useStyles()\n    return (\n        <div>\n    <Card  sx={{ maxWidth: 284 }}>\n     {/* <CardMedia \n      component=\"img\"\n      height=\"292\"\n      image={props.imag} /> */}\n      \n    <Image path={props.imag} width='100%' />\n   \n     <CardContent>\n       <Typography style={{\n        fontFamily:'Cera Pro',\n        fontSize: '18px',\n        fontStyle: 'normal',\n        fontWeight: '700',\n        lineHeight: '23px',\n        letterSpacing: '0em',\n        textAlign: 'left',\n        height: '23px',\n        width: '225px',\n       /*  left: '16px', */\n       /*  top: '310px', */\n        position: 'absolute',\nleft:'5.63%',\nright:'15.14%',\nbottom: '28.54%',\n        borderRadius: 'nullpx'\n\n}} variant=\"subtitle1\">{props.name}</Typography>\n\n\n        <Typography  style={{\n            fontFamily:'Cera Pro',\n            fontSize: '16px',\n            fontStyle: 'normal',\n            fontWeight: '400',\n            lineHeight: '20px',\n            letterSpacing: '0em',\n            textAlign: 'left'}} variant=\"body1\">\n        {props.author}\n        </Typography>\n        <Typography variant=\"caption\" style={{\n          fontFamily:'Cera Pro',\n          fontSize: '14px',\n          fontStyle: 'normal',\n          fontWeight: '400',\n          lineHeight: '18px',\n          letterSpacing: '0em',\n          textAlign: 'left'\n}} className={classes.wrapIcon} >\n    <AccessTimeIcon /> \n            {props.duration}-minute read\n        </Typography>\n     </CardContent>\n    </Card>\n        </div>\n    );\n}\n\nexport default Cards;"]},"metadata":{},"sourceType":"module"}