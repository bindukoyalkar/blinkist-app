{"version":3,"file":"main.90122606da19b20b4113.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;;AAEA;AACA;AACA;AAFA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;;;AAIA;AAAA;;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AAUA;;AApBA;;AAAA;AAsBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;;AAgBA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAgBA;;AAlBA;AAmBA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/CA;AACA;AACA;;AAeA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAiBA;;AAnBA;AAoBA;AAEA;AACA;AACA;AACA","sources":["webpack://typescript-with-mui/./src/organisms/SwitchTab/SwitchTab.stories.tsx","webpack://typescript-with-mui/./src/organisms/SwitchTab/SwitchTab.tsx","webpack://typescript-with-mui/./src/utils/CurrentBooks.tsx","webpack://typescript-with-mui/./src/utils/FinishedBooks.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\n\\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\\nimport SwitchTab from './SwitchTab';\\n\\nexport default {\\n  title: 'Molecules/SwitchTab',\\n  component: SwitchTab,\\n} as ComponentMeta<typeof SwitchTab>;\\n\\nexport const Tab: ComponentStory<typeof SwitchTab> = () => <SwitchTab ></SwitchTab>;\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Tab\":{\"startLoc\":{\"col\":53,\"line\":11},\"endLoc\":{\"col\":83,\"line\":11},\"startBody\":{\"col\":53,\"line\":11},\"endBody\":{\"col\":83,\"line\":11}}};\n    \nimport React from 'react';\n\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\nimport SwitchTab from './SwitchTab';\n\nexport default {\n  title: 'Molecules/SwitchTab',\n  component: SwitchTab,\n} as ComponentMeta<typeof SwitchTab>;\n\nexport const Tab: ComponentStory<typeof SwitchTab> = () => <SwitchTab ></SwitchTab>;\n\n\n\nTab.parameters = { storySource: { source: \"() => <SwitchTab ></SwitchTab>\" }, ...Tab.parameters };","import React from 'react';\nimport {Tabs, Tab} from '@mui/material'\nimport CurrentBooks from '../../utils/CurrentBooks';\nimport FinishedBooks from '../../utils/FinishedBooks';\ninterface Props{\n    searchTerm:string\n}\nconst SwitchTab=(props:Props)=> {\n    const [value,setValue]= React.useState(0)\n    const handleTabs=(e:React.SyntheticEvent<Element, Event> , val: number)=>{\n        console.log(val)\n        setValue(val)\n        }\n    const changeTab=(val:number)=>{\n        setValue(val)\n    }\n    return (\n        <div style={{zIndex:-1}}> \n    <Tabs value={value} onChange={handleTabs} style={{marginLeft:\"15%\",color:'green'}}>\n      <Tab  label=\"Currently reading\" style={{textTransform:\"none\",width:\"304px\",fontWeight:700,fontSize:18,}}/>\n      <Tab  label=\"Finished\" style={{textTransform:\"none\",width:\"304px\",fontWeight:700,fontSize:18}}/>\n    </Tabs>\n    \n    { value === 0 && <div style={{paddingTop:\"2%\"}}><CurrentBooks changeTab={changeTab} searchTerm={props.searchTerm}/> </div>}\n    { value === 1 && <div  style={{paddingTop:\"2%\"}}><FinishedBooks changeTab={changeTab} searchTerm={props.searchTerm}/></div>}\n        </div>\n    );\n}\n\nexport default SwitchTab;","import { Grid ,Container} from '@mui/material'\nimport OPENBOOK from './currentlyReading';\nimport MyCard from '../organisms/MyCard/MyCard';\ninterface Props{\n  changeTab(val:number): any\n  searchTerm:string\n}\n\ninterface BookType{\n  id:number,\n  src:string,\n  name:string,\n  author:string,\n  duration:string,\n  noOfReads?:string,\n}\n\n\nconsole.log(\"currently reading books:\")\nconsole.log(OPENBOOK) \n\nfunction CurrentBooks(props:Props){\n    return (\n    <Container style={{paddingLeft:\"7%\",paddingRight:\"7%\"}}>\n      <Grid container rowSpacing={2} >\n      { OPENBOOK.filter((val:any)=>{\n      if(props.searchTerm === \"\")\n        return val \n      else if (val.name.toLowerCase().includes(props.searchTerm.toLowerCase()) \n      || val.author.toLowerCase().includes(props.searchTerm.toLowerCase())){\n        return val\n      }}).map((book:BookType) =><Grid item xs={12} sm={6} md={4}> <MyCard  changeTab={props.changeTab} \n      progressBar='half' button='Finished'\n      id={book.id} key={book.id} src={book.src} name={book.name}\n      author={book.author} duration={book.duration} noOfReads={book.noOfReads}/>\n       </Grid> )} \n      </Grid>\n      </Container>\n    );\n}\nexport default CurrentBooks;\n\n/* {OPENBOOK.map(book=> (<Grid item xs={12} sm={6} md={4}>\n  <MyCard changeTab={props.changeTab} progressBar='half' button='Finished' id={book.id} key={book.id} src={book.src} name={book.name} author={book.author} duration={book.duration}\n  noOfReads={book.noOfReads}\n  />\n</Grid>\n))}  */","import { Grid ,Container} from '@mui/material'\nimport CLOSEDBOOK from './completedReading';\nimport MyCard from '../organisms/MyCard/MyCard';\ninterface Props{\n  changeTab(val:number): any\n  searchTerm:string\n}\n\ninterface BookType{\n  id:number,\n  src:string,\n  name:string,\n  author:string,\n  duration:string,\n  noOfReads?:string,\n}\n\nconsole.log(\"finished reading books:\")\nconsole.log(CLOSEDBOOK) \n\nfunction FinishedBooks(props:Props){\n    return (\n      <Container style={{paddingLeft:\"7%\",paddingRight:\"7%\"}}>\n      <Grid container rowSpacing={2} spacing={4}>\n      { CLOSEDBOOK.filter((val:any)=>{\n      if(props.searchTerm === \"\")\n        return val \n      else if (val.name.toLowerCase().includes(props.searchTerm.toLowerCase()) \n      || val.author.toLowerCase().includes(props.searchTerm.toLowerCase())){\n        return val\n      }}).map((book:BookType) =><Grid item xs={12} sm={6} md={4}> \n      <MyCard  changeTab={props.changeTab} \n      progressBar='full' button='Read again'\n      id={book.id} key={book.id} src={book.src} name={book.name}\n      author={book.author} duration={book.duration} noOfReads={book.noOfReads}/>\n       </Grid> )} \n      </Grid>\n      </Container>\n    );\n}\nexport default FinishedBooks;\n\n/* {CLOSEDBOOK.map(book=> (<Grid item xs={12} sm={6} md={4}>\n  <MyCard changeTab={props.changeTab} id={book.id} key={book.id} src={book.src} name={book.name} author={book.author} duration={book.duration} progressBar='full' button='Read again'/>\n</Grid>\n))}   */"],"names":[],"sourceRoot":""}