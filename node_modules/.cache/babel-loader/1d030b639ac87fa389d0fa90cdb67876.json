{"ast":null,"code":"var _jsxFileName = \"/home/binduk/REACT/blinkist/src/utils/CurrentBooks.tsx\";\nimport { Grid, Container } from '@mui/material';\nimport OPENBOOK from './currentlyReading';\nimport MyCard from '../organisms/MyCard/MyCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n//console.log(\"currently reading books:\")\n//console.log(OPENBOOK) \nfunction CurrentBooks(props) {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      paddingLeft: \"7%\",\n      paddingRight: \"7%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      rowSpacing: 2,\n      children: OPENBOOK.filter(val => {\n        if (props.searchTerm === \"\") return val;else if (val.name.toLowerCase().includes(props.searchTerm.toLowerCase()) || val.author.toLowerCase().includes(props.searchTerm.toLowerCase())) {\n          return val;\n        }\n      }).map(book => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: [\" \", /*#__PURE__*/_jsxDEV(MyCard, {\n          changeTab: props.changeTab,\n          progressBar: \"half\",\n          button: \"Finished\",\n          id: book.id,\n          src: book.src,\n          name: book.name,\n          author: book.author,\n          duration: book.duration,\n          noOfReads: book.noOfReads\n        }, book.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 67\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 33\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_c = CurrentBooks;\nexport default CurrentBooks;\n/* {OPENBOOK.map(book=> (<Grid item xs={12} sm={6} md={4}>\n  <MyCard changeTab={props.changeTab} progressBar='half' button='Finished' id={book.id} key={book.id} src={book.src} name={book.name} author={book.author} duration={book.duration}\n  noOfReads={book.noOfReads}\n  />\n</Grid>\n))}  */\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentBooks\");","map":{"version":3,"sources":["/home/binduk/REACT/blinkist/src/utils/CurrentBooks.tsx"],"names":["Grid","Container","OPENBOOK","MyCard","CurrentBooks","props","paddingLeft","paddingRight","filter","val","searchTerm","name","toLowerCase","includes","author","map","book","changeTab","id","src","duration","noOfReads"],"mappings":";AAAA,SAASA,IAAT,EAAeC,SAAf,QAA+B,eAA/B;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;;AAgBA;AACA;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAAkC;AAC9B,sBACA,QAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAACC,MAAAA,WAAW,EAAC,IAAb;AAAkBC,MAAAA,YAAY,EAAC;AAA/B,KAAlB;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,UAAU,EAAE,CAA5B;AAAA,gBACEL,QAAQ,CAACM,MAAT,CAAiBC,GAAD,IAAW;AAC7B,YAAGJ,KAAK,CAACK,UAAN,KAAqB,EAAxB,EACE,OAAOD,GAAP,CADF,KAEK,IAAIA,GAAG,CAACE,IAAJ,CAASC,WAAT,GAAuBC,QAAvB,CAAgCR,KAAK,CAACK,UAAN,CAAiBE,WAAjB,EAAhC,KACNH,GAAG,CAACK,MAAJ,CAAWF,WAAX,GAAyBC,QAAzB,CAAkCR,KAAK,CAACK,UAAN,CAAiBE,WAAjB,EAAlC,CADE,EACgE;AACnE,iBAAOH,GAAP;AACD;AAAC,OANA,EAMEM,GANF,CAMOC,IAAD,iBAAkB,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAA0B,QAAA,EAAE,EAAE,CAA9B;AAAA,qCAAkC,QAAC,MAAD;AAAS,UAAA,SAAS,EAAEX,KAAK,CAACY,SAA1B;AAC5D,UAAA,WAAW,EAAC,MADgD;AACzC,UAAA,MAAM,EAAC,UADkC;AAE5D,UAAA,EAAE,EAAED,IAAI,CAACE,EAFmD;AAEjC,UAAA,GAAG,EAAEF,IAAI,CAACG,GAFuB;AAElB,UAAA,IAAI,EAAEH,IAAI,CAACL,IAFO;AAG5D,UAAA,MAAM,EAAEK,IAAI,CAACF,MAH+C;AAGvC,UAAA,QAAQ,EAAEE,IAAI,CAACI,QAHwB;AAGd,UAAA,SAAS,EAAEJ,IAAI,CAACK;AAHF,WAE1CL,IAAI,CAACE,EAFqC;AAAA;AAAA;AAAA;AAAA,gBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,cANxB;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADA;AAiBH;;KAlBQd,Y;AAmBT,eAAeA,YAAf;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { Grid ,Container} from '@mui/material'\nimport OPENBOOK from './currentlyReading';\nimport MyCard from '../organisms/MyCard/MyCard';\ninterface Props{\n  changeTab(val:number): any\n  searchTerm:string\n}\n\ninterface BookType{\n  id:number,\n  src:string,\n  name:string,\n  author:string,\n  duration:string,\n  noOfReads?:string,\n}\n\n\n//console.log(\"currently reading books:\")\n//console.log(OPENBOOK) \n\nfunction CurrentBooks(props:Props){\n    return (\n    <Container style={{paddingLeft:\"7%\",paddingRight:\"7%\"}}>\n      <Grid container rowSpacing={2} >\n      { OPENBOOK.filter((val:any)=>{\n      if(props.searchTerm === \"\")\n        return val \n      else if (val.name.toLowerCase().includes(props.searchTerm.toLowerCase()) \n      || val.author.toLowerCase().includes(props.searchTerm.toLowerCase())){\n        return val\n      }}).map((book:BookType) =><Grid item xs={12} sm={6} md={4}> <MyCard  changeTab={props.changeTab} \n      progressBar='half' button='Finished'\n      id={book.id} key={book.id} src={book.src} name={book.name}\n      author={book.author} duration={book.duration} noOfReads={book.noOfReads}/>\n       </Grid> )} \n      </Grid>\n      </Container>\n    );\n}\nexport default CurrentBooks;\n\n/* {OPENBOOK.map(book=> (<Grid item xs={12} sm={6} md={4}>\n  <MyCard changeTab={props.changeTab} progressBar='half' button='Finished' id={book.id} key={book.id} src={book.src} name={book.name} author={book.author} duration={book.duration}\n  noOfReads={book.noOfReads}\n  />\n</Grid>\n))}  */"]},"metadata":{},"sourceType":"module"}