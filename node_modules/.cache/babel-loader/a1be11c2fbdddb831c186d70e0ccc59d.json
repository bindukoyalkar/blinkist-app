{"ast":null,"code":"var _jsxFileName = \"/home/binduk/REACT/blinkist/src/molecules/SearchBar.tsx\";\nimport React from 'react';\nimport { TextField } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchBar = props => {\n  /*  const [value,setValue]= useState('')\n    const filteredBooks:{id: number,\n     src: string,\n     name: string,\n     author: string,\n     duration: string,\n     noOfReads?: string}[]=[]\n    const search= (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>)=>{\n     //console.log(e.target.value)\n     let filter=e.target.value.toLowerCase();\n     for(let i=0;i<props.books.length; i++){\n         let textvalue= props.books[i].name.toLowerCase();\n         if(textvalue.indexOf(filter)> -1){\n           filteredBooks.push(props.books[i])\n         }\n     }\n     console.log(`the filtered books are `)\n     filteredBooks.map(book => console.log(book.name))\n   } */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TextField, {\n      style: {\n        width: '750px'\n      },\n      onChange: search,\n      label: \"Search by title or author\",\n      variant: \"standard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/home/binduk/REACT/blinkist/src/molecules/SearchBar.tsx"],"names":["React","TextField","SearchBar","props","width","search"],"mappings":";AAAA,OAAOA,KAAP,MAAwC,OAAxC;AAEA,SAAyBC,SAAzB,QAAsF,eAAtF;;;AAYA,MAAMC,SAAS,GAAEC,KAAD,IAAgB;AAC/B;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGI,sBACI;AAAA,2BAiCR,QAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC;AAAP,OAAlB;AAAoC,MAAA,QAAQ,EAAEC,MAA9C;AAAsD,MAAA,KAAK,EAAC,2BAA5D;AAAwF,MAAA,OAAO,EAAC;AAAhG;AAAA;AAAA;AAAA;AAAA;AAjCQ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiDH,CAvED;;KAAMH,S;AAyEN,eAAeA,SAAf","sourcesContent":["import React, { useRef, useState } from 'react';\nimport SearchOutlinedIcon from '@mui/icons-material/SearchOutlined';\nimport { InputAdornment, TextField ,Grid, Menu, MenuItem, Typography, Container} from '@mui/material';\nimport MyCard from './MyCard';\nimport OPENBOOK from '../utils/currentlyReading';\n\ninterface Props{\n  /* books:{id: number,\n    src: string,\n    name: string,\n    author: string,\n    duration: string,\n    noOfReads?: string}[] */\n}\nconst SearchBar=(props:Props)=> {\n /*  const [value,setValue]= useState('')\n\n  const filteredBooks:{id: number,\n    src: string,\n    name: string,\n    author: string,\n    duration: string,\n    noOfReads?: string}[]=[]\n\n  const search= (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>)=>{\n    //console.log(e.target.value)\n    let filter=e.target.value.toLowerCase();\n    for(let i=0;i<props.books.length; i++){\n        let textvalue= props.books[i].name.toLowerCase();\n        if(textvalue.indexOf(filter)> -1){\n          filteredBooks.push(props.books[i])\n        }\n    }\n    console.log(`the filtered books are `)\n    filteredBooks.map(book => console.log(book.name))\n  } */\n    return (\n        <div>\n       {/*  <Grid container direction=\"row\" alignItems=\"center\">\n  <Grid item>\n  <SearchOutlinedIcon/>\n  </Grid>\n  <Grid item>\n  <TextField icon={<SearchOutlinedIcon/>} label=\"Search by title or author\" variant=\"standard\" />\n  </Grid>\n</Grid>  */} \n\n\n{/* <TextField\n  variant=\"standard\"\n  InputProps={{\n    startAdornment: (\n      <InputAdornment position=\"start\">\n        <SearchOutlinedIcon />\n      </InputAdornment>\n    )\n  }}\n  style={{height: '46px',\n    width: '658px',\n    }}\n  label=\"Search by title or author\"\n/> */}\n\n{/* <Typography variant='h6'style={{height: '46px',\n    width: '658px',verticalAlign: 'middle',\n    display: 'inline-flex', borderBottom:'1px solid black'\n    }} ><SearchOutlinedIcon/> Search by title or author</Typography>\n        </div>\n    ); */}\n\n<TextField style={{width:'750px'}}  onChange={search} label=\"Search by title or author\" variant=\"standard\" />\n{/* <Container style={{paddingLeft:\"7%\",paddingRight:\"7%\"}}>\n      <Grid container rowSpacing={2} >\n        {props.books.map(book=> (<Grid item xs={12} sm={6} md={4}>\n          <MyCard progressBar='half' button='Finished' id={book.id} key={book.id} src={book.src} name={book.name} author={book.author} duration={book.duration}\n          noOfReads={book.noOfReads}\n          />\n        </Grid>\n        ))}        \n      </Grid>\n      </Container> */}\n\n\n</div> );\n\n}\n\nexport default SearchBar;"]},"metadata":{},"sourceType":"module"}